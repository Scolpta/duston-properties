---
import Layout from "../../layouts/Layout.astro";
import FeaturedInsight from "../../components/FeaturedInsight.astro";
import InsightTile from "../../components/InsightTile.astro";
import InsightsFilters from "../../components/InsightsFilters.astro";
import { INSIGHT_CATEGORIES } from "../../lib/insights";
import { getPostsQuery, type Post } from "../../types";

const response = await fetch(import.meta.env.HYGRAPH_ENDPOINT, getPostsQuery);
const json = await response.json();

const posts: Post[] = json.data.posts;

const [featured, ...rest] = posts;
---

<Layout>
  <section class="pt-6 md:pt-10">
    <div
      class="container mx-auto px-4 md:px-6 flex flex-col md:flex-row justify-between gap-6 md:gap-0"
    >
      <h1
        class="text-h4 md:text-d2 leading-tight md:leading-[78px] font-semibold text-primary"
      >
        Insights
      </h1>
      <!-- <div class="mt-2 md:mt-6">
        <InsightsFilters categories={INSIGHT_CATEGORIES} />
      </div> -->
    </div>
  </section>

  <section class="py-6 md:py-10">
    <div class="container mx-auto px-4 md:px-6">
      <FeaturedInsight
        tag={featured.postTag}
        readTime={"5 min read"}
        title={featured.title}
        excerpt={featured.excerpt}
        imageSrc={featured.coverImage.url}
        slug={featured.slug}
      />
    </div>
  </section>

  <section class="pb-12 md:pb-20">
    <div
      class="container mx-auto px-4 md:px-6 grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-10"
      data-insights-grid
    >
      {
        rest.map((item) => (
          <div data-tag={item.postTag} data-title={item.title}>
            <InsightTile
              tag={item.postTag}
              readTime={"5 min read"}
              title={item.title}
              imageSrc={item.coverImage.url}
              slug={item.slug}
            />
          </div>
        ))
      }
    </div>
  </section>

  <script is:inline>
    const buttons = Array.from(document.querySelectorAll("[data-category]"));
    const searchInput = document.querySelector('input[type="search"]');
    const grid = document.querySelector("[data-insights-grid]");

    function normalize(text) {
      return (text || "").toLowerCase();
    }

    function applyFilters() {
      const activeButton = buttons.find(
        (b) => b.getAttribute("data-active") === "true"
      );
      const activeCategory = activeButton
        ? activeButton.getAttribute("data-category")
        : "All";
      const query = normalize(searchInput?.value || "");

      const items = Array.from(grid?.children || []);
      items.forEach((el) => {
        const title = normalize(el.getAttribute("data-title") || "");
        const category = el.getAttribute("data-tag") || "";
        const matchesCategory =
          activeCategory === "All" || category === activeCategory;
        const matchesQuery = query.length === 0 || title.includes(query);
        el.toggleAttribute("hidden", !(matchesCategory && matchesQuery));
      });
    }

    buttons.forEach((btn) => {
      btn.addEventListener("click", () => {
        buttons.forEach((b) => b.setAttribute("data-active", "false"));
        btn.setAttribute("data-active", "true");
        applyFilters();
      });
    });

    searchInput?.addEventListener("input", () => applyFilters());
  </script>
</Layout>
